#!/usr/bin/env perl

use FindBin;
use lib "$FindBin::Bin/../perl/";
use KBDeploy;
use strict;

my $hashfile;

$hashfile=shift @ARGV if ($ARGV[0] ne '-f' && $ARGV[0] ne '-b');
exit if $ARGV[0] eq 'bootstrap';

exit if -e '/kb/deployment' && $ARGV[0] ne '-f';

my $cfg=read_config();

my $LOGFILE="/tmp/deploy.log";
my $KB_DC=$cfg->{'global'}->{devcontainer};

stop_service('invocation');

my @sl=('Workspace','invocation','cdmi_api', 'translation', 'CompressionBasedDistance', 'protein_info_service', 'trees', 'fbaModelServices', 'probabilistic_annotation', 'genome_annotation', 'genotype_phenotype_api', 'idserver', 'handle_service', 'ontology_service', 'plant_expression_service','kmer_annotation_figfam', 'meme', 'networks','CoExpression', 'KBaseExpression');

#m5nr
#uploader
#search

deploy_service('',@sl);


chdir($KB_DC.'/modules');
opendir(my $dh, './') || die "can't opendir ./: $!";
my @modules = grep { ! /^\./ && -d "./$_" } readdir($dh);
closedir $dh;

for my $_ (@modules){
    print "$_\n";
    next if /auth_service/;
    next if /kb_model_seed/;
    chdir("$KB_DC/modules/$_");
    my $target='deploy-client';
    $target='deploy' if (/auth/);
    mysystem(". $KB_DC/user-env.sh;make $target >> $LOGFILE 2>&1");
}
chdir "$KB_DC/modules/invocation";
mysystem(". $KB_DC/user-env.sh;make deploy >> $LOGFILE 2>&1");

start_service('invocation');

my $target=$cfg->{'global'}->{deploydir}."/services/invocation";
#Need to test
#mysystem("sed -i 's/\/\/.*\/services\/invocation/\/\/next.kbase.us\/services\/invocation/' $target/webroot/Iris/iris.html");
