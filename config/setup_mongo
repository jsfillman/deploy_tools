#!/usr/bin/env perl 

use lib '../perl';
use Data::Dumper;
use KBDeploy;
use strict;

my $debug=0;

my $cfgfile="../cluster.ini";
my $basedir="/root/dt";
my $gtag='global';

my $cfg=read_config($cfgfile,$gtag);

mysystem("[ -e /sbin/mkfs.xfs ] ||  apt-get -y install xfsprogs");

# Format data
my $doformat=1;
open(M,"/proc/mounts");
while(<M>){
  $doformat=0 if /\/data/; 
}

if ($doformat) {
  die "Missing /dev/vdb" unless -e "/dev/vdb";
  mysystem("mkfs -t xfs /dev/vdb");
  mkdir "/data" unless -e "/data";
  mysystem("mount /dev/vdb /data");
  mkdir "/data/mongodb";
  mysystem("chown 113 /data/mongodb");
}

# Add repo
if (! -e "/etc/apt/sources.list.d/mongodb.list" ){
  mysystem("apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 7F0CEB10","echo 'deb http://downloads-distro.mongodb.org/repo/ubuntu-upstart dist 10gen' > /etc/apt/sources.list.d/mongodb.list");
}
# Install Mongo
if (! -e "/usr/bin/mongo" ){
  mysystem("apt-get update","apt-get -y install mongodb-org mongodb-org-server");
}

# Copy config files
mysystem("cp mongo.conf /etc/mongod.conf");
# Keyfile
mysystem("cp mongodb-keyfile /data/mongodb/keyfile","chmod 600 /data/mongodb/keyfile","chown mongodb:mongodb /data/mongodb/keyfile");

# restart
mysystem("/etc/init.d/mongod restart");

mysystem("echo 'rs.initiate();'|mongo");
sleep(10);

#
#db = db.getSiblingDB('admin');
#db.auth('mongoadmin','gy4moli5phi3thij')
my $user=$cfg->{services}->{mongo}->{user};
my $pwd=$cfg->{services}->{mongo}->{pwd};
if ( ! -e "/root/.mongorc.js"){
  adduser('admin',$user,$pwd, "[\"userAdminAnyDatabase\",\"root\"]");
  open(RC,"> /root/.mongorc.js");
  print RC "db = db.getSiblingDB('admin')\n";
  print RC "db.auth('$user','$pwd')\n";
  close RC;
  open(MC,">> /etc/mongo.conf");
  print MC "auth = true\n";
  close MC;
  mysystem("/etc/init.d/mongod restart");
}

for my $s (keys %{$cfg->{services}}){
  my $mh=$cfg->{services}->{$s}->{'mongodb-host'};
  my $mu=$cfg->{services}->{$s}->{'mongodb-user'};
  my $mp=$cfg->{services}->{$s}->{'mongodb-pwd'};
  my $md=$cfg->{services}->{$s}->{'mongodb-database'};
  my $rem;
  if (defined $mh){
    if ($mh=~/mongodb:/){
       #Format: mongodb://user:pwd@host/db
       $_=$mh;
       s/mongodb:\/\///;
       ($mu,$mp,$mh,$md,$rem)=split /[:@\/]/,$_,5;  
       die "Unable to parse URI $_\nusername and password cannot contain a :,@ or /\n" if defined $rem;
       #($mp,$_)=split /@/,$_,2;  
       #($mh,$md)=split /\//,$_,2;  
    }
    else{
    }
    adduser($md,$mu,$mp, "[\"readWrite\", \"dbAdmin\"]");
  }
}

sub adduser {
  my ($db,$user,$pwd,$roles)=@_;
  # TODO: Add some type of check
  my $com="use $db;\ndb.createUser( { user: \"$user\", pwd: \"$pwd\", roles: $roles })\n";
  mysystem("echo '$com'|mongo|grep -v 'exists'|grep -v bye|grep -v connecting|grep -v shell");
}
