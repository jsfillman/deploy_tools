#!/usr/bin/env perl 

use lib './perl';
use Switch;
use Data::Dumper;
use KBDeploy;
use strict;

my $debug=0;

my $cfgfile="./cluster.ini";
my $basedir="/root/dt";
my $globaltag='global';


my $cfg=read_config($cfgfile,$globaltag);

my $command=shift @ARGV;

switch ($command) {
  case /mkvm/ {
    vmpreflight();
    print Dumper($cfg);
    configure_vm();
  }
  case /boot/ {
    boot_nodes();
  }
  case /confnodes/ {
    config_nodes();
  }
  case /start/ {
  }
  case /updatehostassignments/ {
     vmpreflight();
  }
  else {
    printf stderr "Usage: $0 <mkvm|boot|confnodes|start>\n";
    exit 1;
  }
}


sub vmpreflight {
  # Check that group exist
  if (system("lsdef -t group ".$cfg->{global}->{xcatgroup}."|grep -c 'Could not' > /dev/null") eq 0 ){
    print "Add group\n";
    mysystem("mkdef -t group $cfg->{global}->{xcatgroup}");
  }

  # Get a list of configured services and used nodes
  open(L,"nodels $cfg->{global}->{xcatgroup} nodelist.comments|");
  while(<L>){
    chomp;
    my ($host,$service)=split /: /;
    $cfg->{services}->{$service}->{host}=$host;
    print "Found $service on $host\n" if $debug;
    $cfg->{nodes}->{used}->{$host}=1;
  }

  # Create a list of nodes that can be used
  for (my $i=1;$i<$cfg->{global}->{maxnodes};$i++){
    my $name=sprintf "%s%02d",$cfg->{global}->{basename},$i;
    if (! defined $cfg->{nodes}->{used}->{$name}){
      push @{$cfg->{nodes}->{available}},$name;
    }
  }
}


sub boot_nodes {
  mysystem("rpower $cfg->{global}->{xcatgroup} on > /dev/null");
  while(system("nodestat $cfg->{global}->{xcatgroup}|grep -vc sshd > /dev/null") eq 0){
    sleep 5;
  }
  print "All nodes up\n";
}

sub configure_vm {
  foreach my $service (@{$cfg->{servicelist}}){
    #next if $service eq $globaltag;
    print "Service: $service\n";
    if (! defined $cfg->{services}->{$service}->{host}){
      print "- Configue $service\n";
      my $host=shift @{$cfg->{nodes}->{available}} or die "No more nodes to allocate";
      print "- Using $host\n";
      config_host($host,$service);
    }
    else{
      print "- Configured using $cfg->{services}->{$service}->{host}\n";
    }
  }
  # Post creation
  mysystem("makehosts $cfg->{global}->{xcatgroup}");
  mysystem("makeconservercf $cfg->{global}->{xcatgroup}");
  mysystem("makedhcp $cfg->{global}->{xcatgroup}");
}


sub config_host{
  my $host=shift;
  my $service=shift;

  my $mem=$cfg->{services}->{$service}->{mem};
  my $cores=$cfg->{services}->{$service}->{cores};

  print "Configuring $host for $service with $mem and $cores cores\n";
  mysystem("nodeadd $host groups=".$cfg->{global}->{xcatgroup}.",".$cfg->{global}->{othergroups});
  mysystem("nodech $host nodelist.comments=$service");
  my $alias=$cfg->{global}->{basename}."-".$service;
  mysystem("chdef $host vmmemory=$mem vmcpus=$cores hostnames=$alias");
  mysystem("clonevm $host -b ".$cfg->{global}->{baseimage});
  if (defined $cfg->{services}->{$service}->{disk}){
    foreach my $size (split /,/,$cfg->{services}->{$service}->{disk}){
      mysystem("chvm $host -a $size");
    }
  }
  KBDeploy::update_config($cfgfile,$service,'host',$host);
}

sub config_nodes{

   vmpreflight();
   # Push out the scripts
   my $xg=$cfg->{global}->{xcatgroup};
   mysystem("xdsh $xg '[ -e $basedir ] || mkdir $basedir'");
   mysystem("xdcp $xg $0 $basedir/$0");
   mysystem("xdcp $xg $cfgfile $basedir/$cfgfile");
   mysystem("xdcp $xg -R perl $basedir/");
   mysystem("xdcp $xg -R config $basedir/");

   #Now run the local scripts
   for my $service (@{$cfg->{servicelist}}){
     my $script=$cfg->{$globaltag}->{setup};
     $script=$cfg->{services}->{$service}->{setup} if (defined $cfg->{services}->{$service}->{setup});
     print "Runnig $script on $service\n";
     mysystem("ssh ".$cfg->{services}->{$service}->{host}." 'cd $basedir/config;./$script'");
   }
}
